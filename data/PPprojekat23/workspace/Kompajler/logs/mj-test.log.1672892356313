INFO  05:18:28,431 - Compiling source file: D:\Fakultet\Projekti\Programski Prevodioci 1\workspace\Kompajler\test\program.mj
INFO  05:18:28,457 - #2 program
INFO  05:18:28,458 - #44 p
INFO  05:18:28,458 - #44 int
INFO  05:18:28,458 - #44 c
INFO  05:18:28,458 - #6 =
ERROR 05:18:28,458 - 
Sintaksna greska na liniji 2
INFO  05:18:28,459 - #43 14
INFO  05:18:28,459 - #9 ,
INFO  05:18:28,459 - #44 d
INFO  05:18:28,459 - #9 ,
INFO  05:18:28,459 - #44 e
INFO  05:18:28,459 - #30 &&
INFO  05:18:28,459 - #7 ;
INFO  05:18:28,459 - #5 const
INFO  05:18:28,459 - #44 int
INFO  05:18:28,459 - #44 size
ERROR 05:18:28,459 - Izvrsen oporavak do ; u liniji 2
INFO  05:18:28,460 - #6 =
INFO  05:18:28,460 - #43 10
INFO  05:18:28,460 - #9 ,
INFO  05:18:28,460 - #44 width
INFO  05:18:28,460 - #6 =
INFO  05:18:28,460 - #43 50
INFO  05:18:28,460 - #9 ,
INFO  05:18:28,460 - #44 length
INFO  05:18:28,460 - #6 =
INFO  05:18:28,460 - #43 100
INFO  05:18:28,460 - #7 ;
INFO  05:18:28,460 - #5 const
INFO  05:18:28,461 - #44 boolean
INFO  05:18:28,461 - #44 bool
INFO  05:18:28,461 - #6 =
INFO  05:18:28,461 - #45 true
INFO  05:18:28,461 - #7 ;
INFO  05:18:28,461 - #5 const
INFO  05:18:28,461 - #44 char
INFO  05:18:28,461 - #44 karakter
INFO  05:18:28,461 - #6 =
INFO  05:18:28,461 - #46 b
INFO  05:18:28,461 - #7 ;
INFO  05:18:28,461 - #8 class
INFO  05:18:28,461 - #44 Table
INFO  05:18:28,462 - #3 {
INFO  05:18:28,462 - #44 int
INFO  05:18:28,462 - #44 pos
INFO  05:18:28,462 - #10 [
INFO  05:18:28,462 - #11 ]
INFO  05:18:28,462 - #9 ,
INFO  05:18:28,462 - #44 neg
INFO  05:18:28,462 - #10 [
INFO  05:18:28,462 - #11 ]
INFO  05:18:28,462 - #9 ,
INFO  05:18:28,462 - #44 factor
INFO  05:18:28,462 - #7 ;
INFO  05:18:28,462 - #3 {
INFO  05:18:28,462 - #44 Table
INFO  05:18:28,463 - #13 (
INFO  05:18:28,463 - #44 int
INFO  05:18:28,463 - #44 factor
INFO  05:18:28,463 - #14 )
INFO  05:18:28,463 - #3 {
INFO  05:18:28,463 - #44 this
INFO  05:18:28,463 - #24 .
INFO  05:18:28,463 - #44 factor
INFO  05:18:28,463 - #6 =
INFO  05:18:28,463 - #44 factor
INFO  05:18:28,464 - #7 ;
INFO  05:18:28,464 - #4 }
INFO  05:18:28,464 - #15 void
INFO  05:18:28,464 - #44 putp
INFO  05:18:28,464 - #13 (
INFO  05:18:28,464 - #44 int
INFO  05:18:28,464 - #44 a
INFO  05:18:28,464 - #9 ,
INFO  05:18:28,464 - #44 int
INFO  05:18:28,464 - #44 idx
INFO  05:18:28,464 - #14 )
INFO  05:18:28,464 - #3 {
INFO  05:18:28,465 - #44 this
INFO  05:18:28,465 - #24 .
INFO  05:18:28,465 - #44 pos
INFO  05:18:28,465 - #10 [
INFO  05:18:28,465 - #44 idx
INFO  05:18:28,465 - #11 ]
INFO  05:18:28,465 - #6 =
INFO  05:18:28,465 - #44 a
INFO  05:18:28,465 - #7 ;
INFO  05:18:28,465 - #4 }
INFO  05:18:28,465 - #15 void
INFO  05:18:28,465 - #44 putn
INFO  05:18:28,465 - #13 (
INFO  05:18:28,465 - #44 int
INFO  05:18:28,465 - #44 a
INFO  05:18:28,465 - #9 ,
INFO  05:18:28,465 - #44 int
INFO  05:18:28,465 - #44 idx
INFO  05:18:28,465 - #14 )
INFO  05:18:28,465 - #3 {
INFO  05:18:28,465 - #44 this
INFO  05:18:28,465 - #24 .
INFO  05:18:28,465 - #44 neg
INFO  05:18:28,465 - #10 [
INFO  05:18:28,465 - #44 idx
INFO  05:18:28,466 - #11 ]
INFO  05:18:28,466 - #6 =
INFO  05:18:28,466 - #44 a
INFO  05:18:28,466 - #7 ;
INFO  05:18:28,466 - #4 }
INFO  05:18:28,466 - #44 int
INFO  05:18:28,466 - #44 getp
INFO  05:18:28,466 - #13 (
INFO  05:18:28,466 - #44 int
INFO  05:18:28,466 - #44 idx
INFO  05:18:28,466 - #14 )
INFO  05:18:28,466 - #3 {
INFO  05:18:28,466 - #21 return
INFO  05:18:28,466 - #44 pos
INFO  05:18:28,466 - #10 [
INFO  05:18:28,466 - #44 idx
INFO  05:18:28,466 - #11 ]
INFO  05:18:28,466 - #7 ;
INFO  05:18:28,466 - #4 }
INFO  05:18:28,466 - #44 int
INFO  05:18:28,466 - #44 getn
INFO  05:18:28,466 - #13 (
INFO  05:18:28,466 - #44 int
INFO  05:18:28,466 - #44 idx
INFO  05:18:28,466 - #14 )
INFO  05:18:28,466 - #3 {
INFO  05:18:28,467 - #21 return
INFO  05:18:28,467 - #44 neg
INFO  05:18:28,467 - #10 [
INFO  05:18:28,467 - #44 idx
INFO  05:18:28,467 - #11 ]
INFO  05:18:28,467 - #7 ;
INFO  05:18:28,467 - #4 }
INFO  05:18:28,467 - #4 }
INFO  05:18:28,467 - #4 }
INFO  05:18:28,467 - #8 class
INFO  05:18:28,467 - #44 Angle
INFO  05:18:28,467 - #3 {
INFO  05:18:28,467 - #44 int
INFO  05:18:28,467 - #44 pos
INFO  05:18:28,467 - #10 [
INFO  05:18:28,467 - #11 ]
INFO  05:18:28,467 - #9 ,
INFO  05:18:28,467 - #44 neg
INFO  05:18:28,467 - #10 [
INFO  05:18:28,468 - #11 ]
INFO  05:18:28,468 - #9 ,
INFO  05:18:28,468 - #44 factor
INFO  05:18:28,468 - #7 ;
INFO  05:18:28,468 - #3 {
INFO  05:18:28,468 - #44 Table
INFO  05:18:28,468 - #13 (
INFO  05:18:28,468 - #14 )
INFO  05:18:28,468 - #44 bool
INFO  05:18:28,468 - #44 z
INFO  05:18:28,468 - #10 [
INFO  05:18:28,468 - #11 ]
INFO  05:18:28,468 - #7 ;
INFO  05:18:28,468 - #44 int
INFO  05:18:28,468 - #44 a
INFO  05:18:28,468 - #9 ,
INFO  05:18:28,469 - #44 b
INFO  05:18:28,469 - #7 ;
INFO  05:18:28,469 - #3 {
INFO  05:18:28,469 - #44 this
INFO  05:18:28,469 - #24 .
INFO  05:18:28,469 - #44 factor
INFO  05:18:28,469 - #6 =
INFO  05:18:28,469 - #44 factor
INFO  05:18:28,469 - #7 ;
INFO  05:18:28,469 - #4 }
INFO  05:18:28,469 - #15 void
INFO  05:18:28,469 - #44 putp
INFO  05:18:28,469 - #13 (
INFO  05:18:28,469 - #44 int
INFO  05:18:28,469 - #44 a
INFO  05:18:28,469 - #10 [
INFO  05:18:28,469 - #11 ]
INFO  05:18:28,469 - #9 ,
INFO  05:18:28,469 - #44 int
INFO  05:18:28,469 - #44 idx
INFO  05:18:28,469 - #14 )
INFO  05:18:28,470 - #3 {
INFO  05:18:28,470 - #44 this
INFO  05:18:28,470 - #24 .
INFO  05:18:28,470 - #44 pos
INFO  05:18:28,470 - #10 [
INFO  05:18:28,470 - #44 idx
INFO  05:18:28,470 - #11 ]
INFO  05:18:28,470 - #6 =
INFO  05:18:28,470 - #44 a
INFO  05:18:28,470 - #7 ;
INFO  05:18:28,470 - #4 }
INFO  05:18:28,470 - #15 void
INFO  05:18:28,470 - #44 putn
INFO  05:18:28,470 - #13 (
INFO  05:18:28,470 - #14 )
INFO  05:18:28,470 - #3 {
INFO  05:18:28,470 - #44 this
INFO  05:18:28,470 - #24 .
INFO  05:18:28,470 - #44 neg
INFO  05:18:28,470 - #10 [
INFO  05:18:28,470 - #44 idx
INFO  05:18:28,470 - #11 ]
INFO  05:18:28,470 - #6 =
INFO  05:18:28,470 - #44 a
INFO  05:18:28,470 - #7 ;
INFO  05:18:28,470 - #4 }
INFO  05:18:28,470 - #44 int
INFO  05:18:28,470 - #44 getp
INFO  05:18:28,470 - #13 (
INFO  05:18:28,470 - #44 int
INFO  05:18:28,470 - #44 idx
INFO  05:18:28,470 - #14 )
INFO  05:18:28,470 - #3 {
INFO  05:18:28,470 - #21 return
INFO  05:18:28,470 - #44 pos
INFO  05:18:28,470 - #10 [
INFO  05:18:28,470 - #44 idx
INFO  05:18:28,470 - #11 ]
INFO  05:18:28,470 - #7 ;
INFO  05:18:28,471 - #4 }
INFO  05:18:28,471 - #44 int
INFO  05:18:28,471 - #44 getn
INFO  05:18:28,471 - #13 (
INFO  05:18:28,471 - #14 )
INFO  05:18:28,471 - #3 {
INFO  05:18:28,471 - #21 return
INFO  05:18:28,471 - #44 neg
INFO  05:18:28,471 - #10 [
INFO  05:18:28,471 - #44 idx
INFO  05:18:28,471 - #11 ]
INFO  05:18:28,471 - #7 ;
INFO  05:18:28,471 - #4 }
INFO  05:18:28,471 - #4 }
INFO  05:18:28,471 - #4 }
INFO  05:18:28,471 - #44 Table
INFO  05:18:28,471 - #44 val
INFO  05:18:28,471 - #7 ;
INFO  05:18:28,471 - #44 Int
INFO  05:18:28,471 - #44 rows
INFO  05:18:28,471 - #9 ,
INFO  05:18:28,471 - #44 columns
INFO  05:18:28,471 - #7 ;
INFO  05:18:28,471 - #3 {
INFO  05:18:28,471 - #15 void
INFO  05:18:28,472 - #44 f
INFO  05:18:28,472 - #13 (
INFO  05:18:28,472 - #44 char
INFO  05:18:28,472 - #44 ch
INFO  05:18:28,472 - #9 ,
INFO  05:18:28,472 - #44 int
INFO  05:18:28,472 - #44 a
INFO  05:18:28,472 - #9 ,
INFO  05:18:28,472 - #44 int
INFO  05:18:28,472 - #44 arg
INFO  05:18:28,472 - #14 )
INFO  05:18:28,472 - #3 {
INFO  05:18:28,472 - #44 x
INFO  05:18:28,472 - #6 =
INFO  05:18:28,472 - #44 arg
INFO  05:18:28,472 - #7 ;
INFO  05:18:28,472 - #44 x
INFO  05:18:28,472 - #24 .
INFO  05:18:28,472 - #44 op
INFO  05:18:28,472 - #10 [
INFO  05:18:28,472 - #44 all
INFO  05:18:28,472 - #11 ]
INFO  05:18:28,472 - #28 --
INFO  05:18:28,472 - #7 ;
INFO  05:18:28,472 - #44 y
INFO  05:18:28,472 - #24 .
INFO  05:18:28,472 - #44 killwho
INFO  05:18:28,472 - #13 (
INFO  05:18:28,472 - #44 opps
INFO  05:18:28,472 - #14 )
INFO  05:18:28,473 - #7 ;
INFO  05:18:28,473 - #44 z
INFO  05:18:28,473 - #24 .
INFO  05:18:28,473 - #44 takeoff
INFO  05:18:28,473 - #6 =
INFO  05:18:28,473 - #46 r
INFO  05:18:28,473 - #7 ;
INFO  05:18:28,473 - #21 return
INFO  05:18:28,473 - #7 ;
INFO  05:18:28,473 - #21 return
INFO  05:18:28,473 - #44 a
INFO  05:18:28,473 - #38 +
INFO  05:18:28,473 - #44 b
INFO  05:18:28,473 - #7 ;
INFO  05:18:28,474 - #19 break
INFO  05:18:28,474 - #7 ;
INFO  05:18:28,474 - #20 continue
INFO  05:18:28,474 - #7 ;
INFO  05:18:28,474 - #22 print
INFO  05:18:28,474 - #13 (
INFO  05:18:28,474 - #44 a
INFO  05:18:28,474 - #9 ,
INFO  05:18:28,474 - #43 2
INFO  05:18:28,474 - #14 )
INFO  05:18:28,474 - #7 ;
INFO  05:18:28,474 - #22 print
INFO  05:18:28,474 - #13 (
INFO  05:18:28,474 - #44 b
INFO  05:18:28,475 - #14 )
INFO  05:18:28,475 - #7 ;
INFO  05:18:28,475 - #4 }
INFO  05:18:28,475 - #15 void
INFO  05:18:28,475 - #44 main
INFO  05:18:28,475 - #13 (
INFO  05:18:28,475 - #14 )
INFO  05:18:28,475 - #44 int
INFO  05:18:28,475 - #44 x
INFO  05:18:28,475 - #9 ,
INFO  05:18:28,475 - #44 i
INFO  05:18:28,475 - #7 ;
INFO  05:18:28,475 - #44 char
INFO  05:18:28,475 - #44 c
INFO  05:18:28,475 - #7 ;
INFO  05:18:28,475 - #44 int
INFO  05:18:28,475 - #44 arr
INFO  05:18:28,475 - #10 [
INFO  05:18:28,475 - #11 ]
INFO  05:18:28,475 - #7 ;
INFO  05:18:28,475 - #3 {
INFO  05:18:28,475 - #44 val
INFO  05:18:28,475 - #6 =
INFO  05:18:28,475 - #31 new
INFO  05:18:28,475 - #44 Table
INFO  05:18:28,475 - #13 (
INFO  05:18:28,475 - #43 2
INFO  05:18:28,475 - #14 )
INFO  05:18:28,475 - #7 ;
INFO  05:18:28,475 - #44 arr
INFO  05:18:28,475 - #6 =
INFO  05:18:28,475 - #31 new
INFO  05:18:28,475 - #44 int
INFO  05:18:28,475 - #10 [
INFO  05:18:28,475 - #43 3
INFO  05:18:28,475 - #11 ]
INFO  05:18:28,475 - #7 ;
INFO  05:18:28,475 - #44 i
INFO  05:18:28,476 - #6 =
INFO  05:18:28,476 - #43 0
INFO  05:18:28,476 - #7 ;
INFO  05:18:28,476 - #18 while
INFO  05:18:28,476 - #13 (
INFO  05:18:28,476 - #44 i
INFO  05:18:28,476 - #36 <
INFO  05:18:28,476 - #43 3
INFO  05:18:28,476 - #14 )
INFO  05:18:28,476 - #3 {
INFO  05:18:28,476 - #44 arr
INFO  05:18:28,476 - #10 [
INFO  05:18:28,476 - #44 i
INFO  05:18:28,476 - #11 ]
INFO  05:18:28,476 - #6 =
INFO  05:18:28,476 - #44 i
INFO  05:18:28,476 - #7 ;
INFO  05:18:28,476 - #44 i
INFO  05:18:28,476 - #27 ++
INFO  05:18:28,476 - #7 ;
INFO  05:18:28,477 - #4 }
INFO  05:18:28,477 - #44 arr
INFO  05:18:28,477 - #24 .
INFO  05:18:28,477 - #25 foreach
INFO  05:18:28,477 - #13 (
INFO  05:18:28,477 - #44 x
INFO  05:18:28,477 - #26 =>
INFO  05:18:28,477 - #22 print
INFO  05:18:28,477 - #13 (
INFO  05:18:28,477 - #44 x
INFO  05:18:28,477 - #14 )
INFO  05:18:28,477 - #7 ;
INFO  05:18:28,477 - #14 )
INFO  05:18:28,477 - #7 ;
INFO  05:18:28,477 - #44 val
INFO  05:18:28,477 - #24 .
INFO  05:18:28,477 - #44 pos
INFO  05:18:28,477 - #6 =
INFO  05:18:28,477 - #31 new
INFO  05:18:28,477 - #44 int
INFO  05:18:28,477 - #10 [
INFO  05:18:28,477 - #44 size
INFO  05:18:28,477 - #11 ]
INFO  05:18:28,477 - #7 ;
INFO  05:18:28,477 - #44 val
INFO  05:18:28,477 - #24 .
INFO  05:18:28,477 - #44 neg
INFO  05:18:28,477 - #6 =
INFO  05:18:28,477 - #31 new
INFO  05:18:28,477 - #44 int
INFO  05:18:28,477 - #10 [
INFO  05:18:28,477 - #44 size
INFO  05:18:28,477 - #11 ]
INFO  05:18:28,477 - #7 ;
INFO  05:18:28,477 - #23 read
INFO  05:18:28,477 - #13 (
INFO  05:18:28,477 - #44 x
INFO  05:18:28,477 - #14 )
INFO  05:18:28,477 - #7 ;
INFO  05:18:28,477 - #10 [
INFO  05:18:28,477 - #44 i
INFO  05:18:28,477 - #9 ,
INFO  05:18:28,478 - #9 ,
INFO  05:18:28,478 - #44 x
INFO  05:18:28,478 - #11 ]
INFO  05:18:28,478 - #6 =
INFO  05:18:28,478 - #44 arr
INFO  05:18:28,478 - #7 ;
INFO  05:18:28,478 - #18 while
INFO  05:18:28,478 - #13 (
INFO  05:18:28,478 - #44 i
INFO  05:18:28,478 - #36 <
INFO  05:18:28,478 - #44 size
INFO  05:18:28,478 - #14 )
INFO  05:18:28,478 - #3 {
INFO  05:18:28,478 - #44 val
INFO  05:18:28,478 - #24 .
INFO  05:18:28,478 - #44 putp
INFO  05:18:28,478 - #13 (
INFO  05:18:28,478 - #43 0
INFO  05:18:28,478 - #9 ,
INFO  05:18:28,478 - #44 i
INFO  05:18:28,478 - #39 -
INFO  05:18:28,478 - #43 1
INFO  05:18:28,478 - #14 )
INFO  05:18:28,480 - #7 ;
INFO  05:18:28,480 - #44 val
INFO  05:18:28,480 - #24 .
INFO  05:18:28,480 - #44 putn
INFO  05:18:28,480 - #13 (
INFO  05:18:28,480 - #43 0
INFO  05:18:28,480 - #9 ,
INFO  05:18:28,480 - #44 i
INFO  05:18:28,480 - #14 )
INFO  05:18:28,480 - #7 ;
INFO  05:18:28,480 - #44 i
INFO  05:18:28,480 - #27 ++
INFO  05:18:28,480 - #7 ;
INFO  05:18:28,480 - #4 }
INFO  05:18:28,480 - #44 f
INFO  05:18:28,480 - #13 (
INFO  05:18:28,480 - #44 c
INFO  05:18:28,480 - #9 ,
INFO  05:18:28,480 - #44 x
INFO  05:18:28,480 - #9 ,
INFO  05:18:28,480 - #44 i
INFO  05:18:28,480 - #14 )
INFO  05:18:28,480 - #7 ;
INFO  05:18:28,480 - #23 read
INFO  05:18:28,480 - #13 (
INFO  05:18:28,480 - #44 rows
INFO  05:18:28,480 - #14 )
INFO  05:18:28,480 - #7 ;
INFO  05:18:28,480 - #44 x
INFO  05:18:28,480 - #6 =
INFO  05:18:28,480 - #44 rows
INFO  05:18:28,480 - #7 ;
INFO  05:18:28,480 - #18 while
INFO  05:18:28,480 - #13 (
INFO  05:18:28,480 - #45 true
INFO  05:18:28,480 - #14 )
INFO  05:18:28,480 - #3 {
INFO  05:18:28,480 - #16 if
INFO  05:18:28,480 - #13 (
INFO  05:18:28,480 - #44 x
INFO  05:18:28,480 - #14 )
INFO  05:18:28,480 - #19 break
INFO  05:18:28,480 - #7 ;
INFO  05:18:28,480 - #16 if
INFO  05:18:28,480 - #13 (
INFO  05:18:28,480 - #43 0
INFO  05:18:28,480 - #37 <=
INFO  05:18:28,480 - #44 x
INFO  05:18:28,481 - #30 &&
INFO  05:18:28,481 - #44 x
INFO  05:18:28,481 - #36 <
INFO  05:18:28,481 - #44 size
INFO  05:18:28,481 - #14 )
INFO  05:18:28,481 - #3 {
INFO  05:18:28,481 - #44 val
INFO  05:18:28,481 - #24 .
INFO  05:18:28,481 - #44 putp
INFO  05:18:28,481 - #13 (
INFO  05:18:28,481 - #44 val
INFO  05:18:28,481 - #24 .
INFO  05:18:28,481 - #44 getp
INFO  05:18:28,481 - #13 (
INFO  05:18:28,481 - #44 x
INFO  05:18:28,481 - #14 )
INFO  05:18:28,481 - #38 +
INFO  05:18:28,481 - #43 1
INFO  05:18:28,481 - #14 )
INFO  05:18:28,481 - #7 ;
INFO  05:18:28,481 - #4 }
INFO  05:18:28,481 - #17 else
INFO  05:18:28,481 - #3 {
INFO  05:18:28,481 - #44 val
INFO  05:18:28,481 - #24 .
INFO  05:18:28,481 - #44 putn
INFO  05:18:28,481 - #13 (
INFO  05:18:28,481 - #44 val
INFO  05:18:28,481 - #24 .
INFO  05:18:28,481 - #44 getn
INFO  05:18:28,481 - #13 (
INFO  05:18:28,481 - #39 -
INFO  05:18:28,481 - #44 x
INFO  05:18:28,481 - #14 )
INFO  05:18:28,481 - #38 +
INFO  05:18:28,481 - #43 1
INFO  05:18:28,481 - #14 )
INFO  05:18:28,481 - #7 ;
INFO  05:18:28,481 - #4 }
INFO  05:18:28,481 - #23 read
INFO  05:18:28,482 - #13 (
INFO  05:18:28,482 - #44 x
INFO  05:18:28,482 - #14 )
INFO  05:18:28,482 - #7 ;
INFO  05:18:28,482 - #4 }
INFO  05:18:28,482 - #4 }
INFO  05:18:28,482 - #4 }
INFO  05:18:28,485 - Deklarisana simbolicka konstanta "size" na liniji 3 --- ISPIS OBJEKTNOG CVORA IZ TABELE SIMBOLA
INFO  05:18:28,485 - Deklarisana simbolicka konstanta "width" na liniji 3 --- ISPIS OBJEKTNOG CVORA IZ TABELE SIMBOLA
INFO  05:18:28,485 - Deklarisana simbolicka konstanta "length" na liniji 3 --- ISPIS OBJEKTNOG CVORA IZ TABELE SIMBOLA
ERROR 05:18:28,485 - Nije pronadjen tip boolean u tabeli simobla!
ERROR 05:18:28,485 - Pokusana pogresna dodela konstanti "bool" na liniji 4
INFO  05:18:28,485 - Deklarisana simbolicka konstanta "karakter" na liniji 5 --- ISPIS OBJEKTNOG CVORA IZ TABELE SIMBOLA
ERROR 05:18:28,485 - Nije pronadjen tip Table u tabeli simobla!
ERROR 05:18:28,485 - Nije pronadjen tip Table u tabeli simobla!
ERROR 05:18:28,485 - Nije pronadjen tip Table u tabeli simobla!
ERROR 05:18:28,485 - Nije pronadjen tip Int u tabeli simobla!
ERROR 05:18:28,485 - Nije pronadjen tip Table u tabeli simobla!
INFO  05:18:28,485 - ===================================
