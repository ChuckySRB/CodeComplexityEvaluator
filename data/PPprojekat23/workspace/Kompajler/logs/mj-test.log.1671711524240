INFO  13:10:14,034 - Compiling source file: /Users/aki/eclipse/pp1/Programski Prevodioci 1/workspace/Kompajler/test/program.mj
INFO  13:10:14,043 - #1 program
INFO  13:10:14,043 - #19 p
INFO  13:10:14,043 - #6 const
INFO  13:10:14,043 - #19 int
INFO  13:10:14,043 - #19 size
INFO  13:10:14,043 - #36 =
INFO  13:10:14,043 - #20 10
INFO  13:10:14,043 - #39 ;
INFO  13:10:14,043 - #3 class
INFO  13:10:14,043 - #19 Table
INFO  13:10:14,043 - #47 {
INFO  13:10:14,043 - #19 int
INFO  13:10:14,043 - #19 pos
INFO  13:10:14,043 - #45 [
INFO  13:10:14,043 - #46 ]
INFO  13:10:14,043 - #41 ,
INFO  13:10:14,043 - #19 neg
INFO  13:10:14,043 - #45 [
INFO  13:10:14,044 - #46 ]
INFO  13:10:14,044 - #41 ,
INFO  13:10:14,044 - #19 factor
INFO  13:10:14,044 - #39 ;
INFO  13:10:14,044 - #47 {
INFO  13:10:14,044 - #19 Table
INFO  13:10:14,044 - #43 (
INFO  13:10:14,044 - #19 int
INFO  13:10:14,044 - #19 factor
INFO  13:10:14,044 - #44 )
INFO  13:10:14,044 - #47 {
INFO  13:10:14,044 - #17 this
INFO  13:10:14,044 - #42 .
INFO  13:10:14,044 - #19 factor
INFO  13:10:14,044 - #36 =
INFO  13:10:14,044 - #19 factor
INFO  13:10:14,044 - #39 ;
INFO  13:10:14,044 - #48 }
INFO  13:10:14,044 - #14 void
INFO  13:10:14,044 - #19 putp
INFO  13:10:14,044 - #43 (
INFO  13:10:14,044 - #19 int
INFO  13:10:14,044 - #19 a
INFO  13:10:14,044 - #41 ,
INFO  13:10:14,044 - #19 int
INFO  13:10:14,044 - #19 idx
INFO  13:10:14,044 - #44 )
INFO  13:10:14,044 - #47 {
INFO  13:10:14,044 - #17 this
INFO  13:10:14,044 - #42 .
INFO  13:10:14,044 - #19 pos
INFO  13:10:14,045 - #45 [
INFO  13:10:14,045 - #19 idx
INFO  13:10:14,045 - #46 ]
INFO  13:10:14,045 - #36 =
INFO  13:10:14,045 - #19 a
INFO  13:10:14,045 - #39 ;
INFO  13:10:14,045 - #48 }
INFO  13:10:14,045 - #14 void
INFO  13:10:14,045 - #19 putn
INFO  13:10:14,045 - #43 (
INFO  13:10:14,045 - #19 int
INFO  13:10:14,045 - #19 a
INFO  13:10:14,045 - #41 ,
INFO  13:10:14,047 - #19 int
INFO  13:10:14,048 - #19 idx
INFO  13:10:14,048 - #44 )
INFO  13:10:14,048 - #47 {
INFO  13:10:14,048 - #17 this
INFO  13:10:14,048 - #42 .
INFO  13:10:14,048 - #19 neg
INFO  13:10:14,048 - #45 [
INFO  13:10:14,048 - #19 idx
INFO  13:10:14,048 - #46 ]
INFO  13:10:14,048 - #36 =
INFO  13:10:14,048 - #19 a
INFO  13:10:14,048 - #39 ;
INFO  13:10:14,048 - #48 }
INFO  13:10:14,048 - #19 int
INFO  13:10:14,048 - #19 getp
INFO  13:10:14,048 - #43 (
INFO  13:10:14,048 - #19 int
INFO  13:10:14,048 - #19 idx
INFO  13:10:14,048 - #44 )
INFO  13:10:14,048 - #47 {
INFO  13:10:14,048 - #13 return
INFO  13:10:14,048 - #19 pos
INFO  13:10:14,048 - #45 [
INFO  13:10:14,048 - #19 idx
INFO  13:10:14,048 - #46 ]
INFO  13:10:14,048 - #39 ;
INFO  13:10:14,048 - #48 }
INFO  13:10:14,051 - #19 int
INFO  13:10:14,051 - #19 getn
INFO  13:10:14,051 - #43 (
INFO  13:10:14,051 - #19 int
INFO  13:10:14,051 - #19 idx
INFO  13:10:14,051 - #44 )
INFO  13:10:14,051 - #47 {
INFO  13:10:14,051 - #13 return
INFO  13:10:14,051 - #19 neg
INFO  13:10:14,051 - #45 [
INFO  13:10:14,051 - #19 idx
INFO  13:10:14,051 - #46 ]
INFO  13:10:14,051 - #39 ;
INFO  13:10:14,051 - #48 }
INFO  13:10:14,051 - #48 }
INFO  13:10:14,051 - #48 }
INFO  13:10:14,051 - #19 Table
INFO  13:10:14,051 - #19 val
INFO  13:10:14,051 - #39 ;
INFO  13:10:14,051 - #19 Int
INFO  13:10:14,051 - #19 rows
INFO  13:10:14,052 - #41 ,
INFO  13:10:14,052 - #19 columns
INFO  13:10:14,052 - #39 ;
INFO  13:10:14,052 - #47 {
INFO  13:10:14,052 - #14 void
INFO  13:10:14,052 - #19 f
INFO  13:10:14,052 - #43 (
INFO  13:10:14,052 - #19 char
INFO  13:10:14,052 - #19 ch
INFO  13:10:14,052 - #41 ,
INFO  13:10:14,052 - #19 int
INFO  13:10:14,052 - #19 a
INFO  13:10:14,052 - #41 ,
INFO  13:10:14,052 - #19 int
INFO  13:10:14,052 - #19 arg
INFO  13:10:14,052 - #44 )
INFO  13:10:14,052 - #19 int
INFO  13:10:14,052 - #19 x
INFO  13:10:14,052 - #39 ;
INFO  13:10:14,052 - #47 {
INFO  13:10:14,052 - #19 x
INFO  13:10:14,052 - #36 =
INFO  13:10:14,053 - #19 arg
INFO  13:10:14,053 - #39 ;
INFO  13:10:14,054 - #48 }
INFO  13:10:14,055 - #14 void
INFO  13:10:14,055 - #19 main
INFO  13:10:14,055 - #43 (
INFO  13:10:14,055 - #44 )
INFO  13:10:14,055 - #19 int
INFO  13:10:14,055 - #19 x
INFO  13:10:14,055 - #41 ,
INFO  13:10:14,055 - #19 i
INFO  13:10:14,055 - #39 ;
INFO  13:10:14,055 - #19 char
INFO  13:10:14,055 - #19 c
INFO  13:10:14,055 - #41 ,
INFO  13:10:14,055 - #19 int
INFO  13:10:14,055 - #19 arr
INFO  13:10:14,055 - #45 [
INFO  13:10:14,055 - #46 ]
INFO  13:10:14,055 - #39 ;
INFO  13:10:14,055 - #47 {
INFO  13:10:14,055 - #48 }
INFO  13:10:14,055 - #48 }
INFO  13:10:14,055 - #19 val
INFO  13:10:14,055 - #36 =
INFO  13:10:14,055 - #10 new
INFO  13:10:14,055 - #19 Table
INFO  13:10:14,055 - #43 (
INFO  13:10:14,056 - #20 2
INFO  13:10:14,056 - #44 )
INFO  13:10:14,056 - #39 ;
INFO  13:10:14,056 - #19 arr
INFO  13:10:14,056 - #36 =
INFO  13:10:14,056 - #10 new
INFO  13:10:14,056 - #19 int
INFO  13:10:14,057 - #45 [
INFO  13:10:14,057 - #20 3
INFO  13:10:14,057 - #46 ]
INFO  13:10:14,057 - #39 ;
INFO  13:10:14,057 - #19 i
INFO  13:10:14,057 - #36 =
INFO  13:10:14,057 - #20 0
INFO  13:10:14,057 - #39 ;
INFO  13:10:14,057 - #9 while
INFO  13:10:14,057 - #43 (
INFO  13:10:14,057 - #19 i
INFO  13:10:14,057 - #32 <
INFO  13:10:14,057 - #20 3
INFO  13:10:14,057 - #44 )
INFO  13:10:14,057 - #47 {
INFO  13:10:14,057 - #19 arr
INFO  13:10:14,057 - #45 [
INFO  13:10:14,057 - #19 i
INFO  13:10:14,057 - #46 ]
INFO  13:10:14,057 - #36 =
INFO  13:10:14,057 - #19 i
INFO  13:10:14,057 - #39 ;
INFO  13:10:14,057 - #19 i
INFO  13:10:14,057 - #37 ++
INFO  13:10:14,058 - #39 ;
INFO  13:10:14,059 - #48 }
INFO  13:10:14,059 - #19 arr
INFO  13:10:14,059 - #42 .
INFO  13:10:14,059 - #18 foreach
INFO  13:10:14,059 - #43 (
INFO  13:10:14,059 - #19 x
INFO  13:10:14,059 - #49 =>
INFO  13:10:14,059 - #11 print
INFO  13:10:14,059 - #43 (
INFO  13:10:14,059 - #19 x
INFO  13:10:14,059 - #44 )
INFO  13:10:14,059 - #39 ;
INFO  13:10:14,059 - #44 )
INFO  13:10:14,059 - #39 ;
INFO  13:10:14,059 - #19 val
INFO  13:10:14,059 - #42 .
INFO  13:10:14,059 - #19 pos
INFO  13:10:14,059 - #36 =
INFO  13:10:14,059 - #10 new
INFO  13:10:14,059 - #19 int
INFO  13:10:14,059 - #45 [
INFO  13:10:14,059 - #19 size
INFO  13:10:14,060 - #46 ]
INFO  13:10:14,060 - #39 ;
INFO  13:10:14,060 - #19 val
INFO  13:10:14,060 - #42 .
INFO  13:10:14,060 - #19 neg
INFO  13:10:14,060 - #36 =
INFO  13:10:14,060 - #10 new
INFO  13:10:14,060 - #19 int
INFO  13:10:14,061 - #45 [
INFO  13:10:14,061 - #19 size
INFO  13:10:14,061 - #46 ]
INFO  13:10:14,061 - #39 ;
INFO  13:10:14,061 - #12 read
INFO  13:10:14,061 - #43 (
INFO  13:10:14,061 - #19 x
INFO  13:10:14,061 - #44 )
INFO  13:10:14,061 - #39 ;
INFO  13:10:14,061 - #45 [
INFO  13:10:14,061 - #19 i
INFO  13:10:14,061 - #41 ,
INFO  13:10:14,061 - #41 ,
INFO  13:10:14,061 - #19 x
INFO  13:10:14,061 - #46 ]
INFO  13:10:14,061 - #36 =
INFO  13:10:14,061 - #19 arr
INFO  13:10:14,061 - #39 ;
INFO  13:10:14,061 - #9 while
INFO  13:10:14,061 - #43 (
INFO  13:10:14,061 - #19 i
INFO  13:10:14,061 - #32 <
INFO  13:10:14,061 - #19 size
INFO  13:10:14,061 - #44 )
INFO  13:10:14,061 - #47 {
INFO  13:10:14,061 - #19 val
INFO  13:10:14,061 - #42 .
INFO  13:10:14,061 - #19 putp
INFO  13:10:14,061 - #43 (
INFO  13:10:14,061 - #20 0
INFO  13:10:14,061 - #41 ,
INFO  13:10:14,061 - #19 i
INFO  13:10:14,062 - #44 )
INFO  13:10:14,062 - #39 ;
INFO  13:10:14,062 - #19 val
INFO  13:10:14,062 - #42 .
INFO  13:10:14,062 - #19 putn
INFO  13:10:14,062 - #43 (
INFO  13:10:14,062 - #20 0
INFO  13:10:14,062 - #41 ,
INFO  13:10:14,062 - #19 i
INFO  13:10:14,062 - #44 )
INFO  13:10:14,062 - #39 ;
INFO  13:10:14,062 - #19 i
INFO  13:10:14,062 - #37 ++
INFO  13:10:14,062 - #39 ;
INFO  13:10:14,062 - #48 }
INFO  13:10:14,062 - #19 f
INFO  13:10:14,062 - #43 (
INFO  13:10:14,062 - #19 c
INFO  13:10:14,062 - #41 ,
INFO  13:10:14,062 - #19 x
INFO  13:10:14,062 - #41 ,
INFO  13:10:14,063 - #19 i
INFO  13:10:14,063 - #44 )
INFO  13:10:14,063 - #39 ;
INFO  13:10:14,063 - #12 read
INFO  13:10:14,063 - #43 (
INFO  13:10:14,063 - #19 rows
INFO  13:10:14,063 - #44 )
INFO  13:10:14,063 - #39 ;
INFO  13:10:14,063 - #19 x
INFO  13:10:14,063 - #36 =
INFO  13:10:14,063 - #19 rows
INFO  13:10:14,063 - #39 ;
INFO  13:10:14,063 - #9 while
INFO  13:10:14,063 - #43 (
INFO  13:10:14,063 - #22 true
INFO  13:10:14,063 - #44 )
INFO  13:10:14,063 - #47 {
INFO  13:10:14,063 - #7 if
INFO  13:10:14,063 - #43 (
INFO  13:10:14,063 - #19 x
INFO  13:10:14,064 - #33 <=
INFO  13:10:14,064 - #20 0
INFO  13:10:14,064 - #44 )
INFO  13:10:14,064 - #2 break
INFO  13:10:14,064 - #39 ;
INFO  13:10:14,064 - #7 if
INFO  13:10:14,064 - #43 (
INFO  13:10:14,064 - #20 0
INFO  13:10:14,064 - #33 <=
INFO  13:10:14,064 - #19 x
INFO  13:10:14,064 - #34 &&
INFO  13:10:14,064 - #19 x
INFO  13:10:14,064 - #32 <
INFO  13:10:14,064 - #19 size
INFO  13:10:14,064 - #44 )
INFO  13:10:14,064 - #47 {
INFO  13:10:14,064 - #19 val
INFO  13:10:14,064 - #42 .
INFO  13:10:14,064 - #19 putp
INFO  13:10:14,064 - #43 (
INFO  13:10:14,064 - #19 val
INFO  13:10:14,064 - #42 .
INFO  13:10:14,064 - #19 getp
INFO  13:10:14,065 - #43 (
INFO  13:10:14,066 - #19 x
INFO  13:10:14,066 - #44 )
INFO  13:10:14,066 - #23 +
INFO  13:10:14,066 - #20 1
INFO  13:10:14,066 - #44 )
INFO  13:10:14,066 - #39 ;
INFO  13:10:14,066 - #48 }
INFO  13:10:14,066 - #5 else
INFO  13:10:14,066 - #7 if
INFO  13:10:14,066 - #43 (
INFO  13:10:14,066 - #19 size
INFO  13:10:14,066 - #32 <
INFO  13:10:14,066 - #19 x
INFO  13:10:14,067 - #34 &&
INFO  13:10:14,067 - #19 x
INFO  13:10:14,067 - #32 <
INFO  13:10:14,067 - #20 0
INFO  13:10:14,067 - #44 )
INFO  13:10:14,067 - #47 {
INFO  13:10:14,067 - #19 val
INFO  13:10:14,067 - #42 .
INFO  13:10:14,067 - #19 putn
INFO  13:10:14,067 - #43 (
INFO  13:10:14,067 - #19 val
INFO  13:10:14,067 - #42 .
INFO  13:10:14,067 - #19 getn
INFO  13:10:31,127 - #43 (
