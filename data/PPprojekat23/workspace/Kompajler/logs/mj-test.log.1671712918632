INFO  13:36:22,589 - Compiling source file: /Users/aki/eclipse/pp1/Programski Prevodioci 1/workspace/Kompajler/test/program.mj
INFO  13:36:22,597 - #1 program
INFO  13:36:22,597 - #19 p
INFO  13:36:22,597 - #6 const
INFO  13:36:22,597 - #19 int
INFO  13:36:22,597 - #19 size
INFO  13:36:22,597 - #36 =
INFO  13:36:22,597 - #20 10
INFO  13:36:22,597 - #39 ;
INFO  13:36:22,598 - #3 class
INFO  13:36:22,598 - #19 Table
INFO  13:36:22,598 - #47 {
INFO  13:36:22,598 - #19 int
INFO  13:36:22,598 - #19 pos
INFO  13:36:22,598 - #45 [
INFO  13:36:22,598 - #46 ]
INFO  13:36:22,598 - #41 ,
INFO  13:36:22,598 - #19 neg
INFO  13:36:22,598 - #45 [
INFO  13:36:22,598 - #46 ]
INFO  13:36:22,598 - #41 ,
INFO  13:36:22,598 - #19 factor
INFO  13:36:22,598 - #39 ;
INFO  13:36:22,598 - #47 {
INFO  13:36:22,598 - #19 Table
INFO  13:36:22,598 - #43 (
INFO  13:36:22,599 - #19 int
INFO  13:36:22,599 - #19 factor
INFO  13:36:22,599 - #44 )
INFO  13:36:22,599 - #47 {
INFO  13:36:22,599 - #17 this
INFO  13:36:22,599 - #42 .
INFO  13:36:22,599 - #19 factor
INFO  13:36:22,599 - #36 =
INFO  13:36:22,599 - #19 factor
INFO  13:36:22,599 - #39 ;
INFO  13:36:22,599 - #48 }
INFO  13:36:22,599 - #14 void
INFO  13:36:22,599 - #19 putp
INFO  13:36:22,599 - #43 (
INFO  13:36:22,599 - #19 int
INFO  13:36:22,600 - #19 a
INFO  13:36:22,600 - #41 ,
INFO  13:36:22,600 - #19 int
INFO  13:36:22,600 - #19 idx
INFO  13:36:22,600 - #44 )
INFO  13:36:22,600 - #47 {
INFO  13:36:22,600 - #17 this
INFO  13:36:22,600 - #42 .
INFO  13:36:22,600 - #19 pos
INFO  13:36:22,600 - #45 [
INFO  13:36:22,600 - #19 idx
INFO  13:36:22,600 - #46 ]
INFO  13:36:22,600 - #36 =
INFO  13:36:22,600 - #19 a
INFO  13:36:22,600 - #39 ;
INFO  13:36:22,600 - #48 }
INFO  13:36:22,603 - #14 void
INFO  13:36:22,603 - #19 putn
INFO  13:36:22,603 - #43 (
INFO  13:36:22,603 - #19 int
INFO  13:36:22,603 - #19 a
INFO  13:36:22,603 - #41 ,
INFO  13:36:22,604 - #19 int
INFO  13:36:22,604 - #19 idx
INFO  13:36:22,604 - #44 )
INFO  13:36:22,604 - #47 {
INFO  13:36:22,604 - #17 this
INFO  13:36:22,604 - #42 .
INFO  13:36:22,604 - #19 neg
INFO  13:36:22,604 - #45 [
INFO  13:36:22,604 - #19 idx
INFO  13:36:22,604 - #46 ]
INFO  13:36:22,604 - #36 =
INFO  13:36:22,604 - #19 a
INFO  13:36:22,604 - #39 ;
INFO  13:36:22,604 - #48 }
INFO  13:36:22,604 - #19 int
INFO  13:36:22,604 - #19 getp
INFO  13:36:22,604 - #43 (
INFO  13:36:22,604 - #19 int
INFO  13:36:22,604 - #19 idx
INFO  13:36:22,604 - #44 )
INFO  13:36:22,604 - #47 {
INFO  13:36:22,604 - #13 return
INFO  13:36:22,604 - #19 pos
INFO  13:36:22,604 - #45 [
INFO  13:36:22,604 - #19 idx
INFO  13:36:22,605 - #46 ]
INFO  13:36:22,605 - #39 ;
INFO  13:36:22,605 - #48 }
INFO  13:36:22,605 - #19 int
INFO  13:36:22,605 - #19 getn
INFO  13:36:22,605 - #43 (
INFO  13:36:22,605 - #19 int
INFO  13:36:22,605 - #19 idx
INFO  13:36:22,605 - #44 )
INFO  13:36:22,605 - #47 {
INFO  13:36:22,605 - #13 return
INFO  13:36:22,605 - #19 neg
INFO  13:36:22,605 - #45 [
INFO  13:36:22,605 - #19 idx
INFO  13:36:22,605 - #46 ]
INFO  13:36:22,605 - #39 ;
INFO  13:36:22,605 - #48 }
INFO  13:36:22,605 - #48 }
INFO  13:36:22,605 - #48 }
INFO  13:36:22,605 - #19 Table
INFO  13:36:22,605 - #19 val
INFO  13:36:22,605 - #39 ;
INFO  13:36:22,605 - #19 Int
INFO  13:36:22,605 - #19 rows
INFO  13:36:22,605 - #41 ,
INFO  13:36:22,605 - #19 columns
INFO  13:36:22,605 - #39 ;
INFO  13:36:22,605 - #47 {
INFO  13:36:22,605 - #14 void
INFO  13:36:22,605 - #19 f
INFO  13:36:22,608 - #43 (
INFO  13:36:22,608 - #19 char
INFO  13:36:22,608 - #19 ch
INFO  13:36:22,608 - #41 ,
INFO  13:36:22,608 - #19 int
INFO  13:36:22,608 - #19 a
INFO  13:36:22,608 - #41 ,
INFO  13:36:22,608 - #19 int
INFO  13:36:22,608 - #19 arg
INFO  13:36:22,608 - #44 )
INFO  13:36:22,610 - #19 int
INFO  13:36:22,610 - #19 x
INFO  13:36:22,610 - #38 --
INFO  13:36:22,610 - #39 ;
INFO  13:36:22,611 - #47 {
INFO  13:36:22,612 - #19 x
INFO  13:36:22,612 - #36 =
INFO  13:36:22,612 - #19 arg
INFO  13:36:22,612 - #39 ;
INFO  13:36:22,612 - #48 }
INFO  13:36:22,615 - #14 void
INFO  13:36:22,617 - #19 main
INFO  13:36:22,618 - #43 (
INFO  13:36:22,618 - #44 )
INFO  13:36:22,618 - #19 int
INFO  13:36:22,618 - #19 x
INFO  13:36:22,618 - #41 ,
INFO  13:36:22,618 - #19 i
INFO  13:36:22,618 - #39 ;
INFO  13:36:22,618 - #19 char
INFO  13:36:22,618 - #19 c
INFO  13:36:22,618 - #41 ,
INFO  13:36:22,618 - #19 int
INFO  13:36:22,618 - #19 arr
INFO  13:36:22,618 - #45 [
INFO  13:36:22,618 - #46 ]
INFO  13:36:22,618 - #39 ;
INFO  13:36:22,618 - #47 {
INFO  13:36:22,618 - #48 }
INFO  13:36:22,618 - #48 }
INFO  13:36:22,618 - #19 val
INFO  13:36:22,618 - #36 =
INFO  13:36:22,618 - #10 new
INFO  13:36:22,619 - #19 Table
INFO  13:36:22,619 - #43 (
INFO  13:36:22,619 - #20 2
INFO  13:36:22,619 - #44 )
INFO  13:36:22,619 - #39 ;
INFO  13:36:22,619 - #19 arr
INFO  13:36:22,619 - #36 =
INFO  13:36:22,619 - #10 new
INFO  13:36:22,619 - #19 int
INFO  13:36:22,619 - #45 [
INFO  13:36:22,619 - #20 3
INFO  13:36:22,619 - #46 ]
INFO  13:36:22,619 - #39 ;
INFO  13:36:22,619 - #19 i
INFO  13:36:22,619 - #36 =
INFO  13:36:22,619 - #20 0
INFO  13:36:22,619 - #39 ;
INFO  13:36:22,619 - #9 while
INFO  13:36:22,619 - #43 (
INFO  13:36:22,619 - #19 i
INFO  13:36:22,619 - #32 <
INFO  13:36:22,619 - #20 3
INFO  13:36:22,619 - #44 )
INFO  13:36:22,619 - #47 {
INFO  13:36:22,619 - #19 arr
INFO  13:36:22,619 - #45 [
INFO  13:36:22,619 - #19 i
INFO  13:36:22,619 - #46 ]
INFO  13:36:22,619 - #36 =
INFO  13:36:22,619 - #19 i
INFO  13:36:22,619 - #39 ;
INFO  13:36:22,619 - #19 i
INFO  13:36:22,620 - #37 ++
INFO  13:36:22,620 - #39 ;
INFO  13:36:22,620 - #48 }
INFO  13:36:22,620 - #19 arr
INFO  13:36:22,620 - #42 .
INFO  13:36:22,620 - #18 foreach
INFO  13:36:22,620 - #43 (
INFO  13:36:22,620 - #19 x
INFO  13:36:22,620 - #49 =>
INFO  13:36:22,620 - #11 print
INFO  13:36:22,620 - #43 (
INFO  13:36:22,620 - #19 x
INFO  13:36:22,620 - #44 )
INFO  13:36:22,620 - #39 ;
INFO  13:36:22,620 - #44 )
INFO  13:36:22,620 - #39 ;
INFO  13:36:22,620 - #19 val
INFO  13:36:22,620 - #42 .
INFO  13:36:22,620 - #19 pos
INFO  13:36:22,620 - #36 =
INFO  13:36:22,620 - #10 new
INFO  13:36:22,622 - #19 int
INFO  13:36:22,622 - #45 [
INFO  13:36:22,622 - #19 size
INFO  13:36:22,622 - #46 ]
INFO  13:36:22,622 - #39 ;
INFO  13:36:22,622 - #19 val
INFO  13:36:22,622 - #42 .
INFO  13:36:22,622 - #19 neg
INFO  13:36:22,622 - #36 =
INFO  13:36:22,622 - #10 new
INFO  13:36:22,622 - #19 int
INFO  13:36:22,622 - #45 [
INFO  13:36:22,622 - #19 size
INFO  13:36:22,622 - #46 ]
INFO  13:36:22,622 - #39 ;
INFO  13:36:22,622 - #12 read
INFO  13:36:22,622 - #43 (
INFO  13:36:22,622 - #19 x
INFO  13:36:22,622 - #44 )
INFO  13:36:22,622 - #39 ;
INFO  13:36:22,622 - #45 [
INFO  13:36:22,623 - #19 i
INFO  13:36:22,623 - #41 ,
INFO  13:36:22,623 - #41 ,
INFO  13:36:22,623 - #19 x
INFO  13:36:22,623 - #46 ]
INFO  13:36:22,623 - #36 =
INFO  13:36:22,623 - #19 arr
INFO  13:36:22,623 - #39 ;
INFO  13:36:22,623 - #9 while
INFO  13:36:22,623 - #43 (
INFO  13:36:22,623 - #19 i
INFO  13:36:22,623 - #32 <
INFO  13:36:22,623 - #19 size
INFO  13:36:22,623 - #44 )
INFO  13:36:22,623 - #47 {
INFO  13:36:22,623 - #19 val
INFO  13:36:22,623 - #42 .
INFO  13:36:22,623 - #19 putp
INFO  13:36:22,623 - #43 (
INFO  13:36:22,623 - #20 0
INFO  13:36:22,623 - #41 ,
INFO  13:36:22,624 - #19 i
INFO  13:36:22,624 - #24 -
INFO  13:36:22,624 - #20 1
INFO  13:36:22,624 - #44 )
INFO  13:36:22,624 - #39 ;
INFO  13:36:22,624 - #19 val
INFO  13:36:22,624 - #42 .
INFO  13:36:22,624 - #19 putn
INFO  13:36:22,624 - #43 (
INFO  13:36:22,624 - #20 0
INFO  13:36:22,624 - #41 ,
INFO  13:36:22,624 - #19 i
INFO  13:36:22,624 - #44 )
INFO  13:36:22,624 - #39 ;
INFO  13:36:22,624 - #19 i
INFO  13:36:22,624 - #37 ++
INFO  13:36:22,624 - #39 ;
INFO  13:36:22,624 - #48 }
INFO  13:36:22,624 - #19 f
INFO  13:36:22,624 - #43 (
INFO  13:36:22,624 - #19 c
INFO  13:36:22,624 - #41 ,
INFO  13:36:22,624 - #19 x
INFO  13:36:22,624 - #41 ,
INFO  13:36:22,625 - #19 i
INFO  13:36:22,625 - #44 )
INFO  13:36:22,625 - #39 ;
INFO  13:36:22,625 - #12 read
INFO  13:36:22,625 - #43 (
INFO  13:36:22,625 - #19 rows
INFO  13:36:22,625 - #44 )
INFO  13:36:22,625 - #39 ;
INFO  13:36:22,625 - #19 x
INFO  13:36:22,625 - #36 =
INFO  13:36:22,626 - #19 rows
INFO  13:36:22,626 - #39 ;
INFO  13:36:22,626 - #9 while
INFO  13:36:22,626 - #43 (
INFO  13:36:22,626 - #22 true
INFO  13:36:22,626 - #44 )
INFO  13:36:22,626 - #47 {
INFO  13:36:22,626 - #7 if
INFO  13:36:22,626 - #43 (
INFO  13:36:22,626 - #19 x
INFO  13:36:22,626 - #33 <=
INFO  13:36:22,626 - #20 0
INFO  13:36:22,626 - #44 )
INFO  13:36:22,626 - #2 break
INFO  13:36:22,626 - #39 ;
INFO  13:36:22,626 - #7 if
INFO  13:36:22,626 - #43 (
INFO  13:36:22,626 - #20 0
INFO  13:36:22,626 - #33 <=
INFO  13:36:22,627 - #19 x
INFO  13:36:22,627 - #34 &&
INFO  13:36:22,627 - #19 x
INFO  13:36:22,627 - #32 <
INFO  13:36:22,627 - #19 size
INFO  13:36:22,627 - #44 )
INFO  13:36:22,627 - #47 {
INFO  13:36:22,627 - #19 val
INFO  13:36:22,627 - #42 .
INFO  13:36:22,627 - #19 putp
INFO  13:36:22,627 - #43 (
INFO  13:36:22,627 - #19 val
INFO  13:36:22,627 - #42 .
INFO  13:36:22,627 - #19 getp
INFO  13:36:22,627 - #43 (
INFO  13:36:22,627 - #19 x
INFO  13:36:22,627 - #44 )
INFO  13:36:22,627 - #23 +
INFO  13:36:22,627 - #20 1
INFO  13:36:22,627 - #44 )
INFO  13:36:22,627 - #39 ;
INFO  13:36:22,627 - #48 }
INFO  13:36:22,627 - #5 else
INFO  13:36:22,627 - #7 if
INFO  13:36:22,627 - #43 (
INFO  13:36:22,627 - #19 size
INFO  13:36:22,627 - #32 <
INFO  13:36:22,627 - #19 x
INFO  13:36:22,627 - #34 &&
INFO  13:36:22,627 - #19 x
INFO  13:36:22,628 - #32 <
INFO  13:36:22,628 - #20 0
INFO  13:36:22,628 - #44 )
INFO  13:36:22,628 - #47 {
INFO  13:36:22,628 - #19 val
INFO  13:36:22,628 - #42 .
INFO  13:36:22,628 - #19 putn
INFO  13:36:22,628 - #43 (
INFO  13:36:22,628 - #19 val
INFO  13:36:22,628 - #42 .
INFO  13:36:22,628 - #19 getn
INFO  13:36:22,628 - #43 (
INFO  13:36:22,628 - #19 x
INFO  13:36:22,628 - #44 )
INFO  13:36:22,628 - #23 +
INFO  13:36:22,628 - #20 1
INFO  13:36:22,628 - #44 )
INFO  13:36:22,628 - #39 ;
INFO  13:36:22,628 - #48 }
INFO  13:36:22,628 - #12 read
INFO  13:36:22,628 - #43 (
INFO  13:36:22,628 - #19 x
INFO  13:36:22,628 - #44 )
INFO  13:36:22,628 - #39 ;
INFO  13:36:22,628 - #48 }
