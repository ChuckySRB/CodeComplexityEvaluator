program p
int c = 14, d, e &&;
const int size = 10, width = 50, length = 100; //komentar1
const bool b = true;
const char karakter = 'b';
class Table {
	int pos[], neg[], factor;
    {
		Table(int factor) {this.factor = factor;}
		void putp (int a, int idx) { this.pos[idx] = a; } 
		void putn (int a, int idx) { this.neg[idx] = a; } 
		int getp (int idx) { return pos[idx]; }
		int getn (int idx) { return neg[idx]; }
	} 
}

class Angle {
	int pos[], neg[], factor;
    {
		Table() bool z[]; int a, b; {this.factor = factor;}
		void putp (int a[], int idx) { this.pos[idx] = a; } 
		void putn () { this.neg[idx] = a; } 
		int getp (int idx) { return pos[idx]; }
		int getn () { return neg[idx]; }
	} 
}

Table val;
Int rows, columns;
{
	void f(char ch, int a, int arg)
    	//int x; //komentar1
	{
		x = arg;
		x.op[all]--;
		y.killwho(opps);
		z.takeoff = 'r';
		return;
		return a+b;
		break;
		continue;
		print(a, 2);
		print(b);
	}
	//komentar2
    void main() int x, i; char c; int arr[];
    {
		val = new Table(2);
		arr = new int[3];
		i = 0;
		while (i<3) {
			arr[i] = i;
			i++; 
		}
		arr.foreach(x => print(x););
		val.pos = new int [size];
		val.neg = new int [size];
		read(x);
		
		[i,,x] = arr;
		while (i<size) {
		      val.putp(0, i-1);
		      val.putn(0, i);
		      i++;
		}
		
		f(c, x, i);
		
		read(rows);
		x =rows;
		while (true){
			if(x) break;
			if (0 <= x && x < size)
			{
            	val.putp(val.getp(x)+1);
	        }
			else
			{
				val.putn(val.getn(-x)+1);
			}
			read(x);
		}
	}
}
			
			